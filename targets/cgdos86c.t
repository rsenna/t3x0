! T3X/0 back-end for {MS,PC,etc}DOS/COM on the 8086
! Nils M Holm, 2019,2022,2023
! In the Public Domain / 0BSD License

module cg;

 public const	BPW = 2;

 public const	GPOOL_SIZE = 7;

 public const	BUFLEN = 512;

 public const	SYMTBL_SIZE = 2048;
 public const	LABEL_SIZE = 2048;
 public const	NLIST_SIZE = 6144;

 public const	LOCAL_LIMIT = 32760;

 public binary() return %1;

 public suffix() return ".com";

 public modpath() return [
	"/usr/local/t3x/0/dos86c/",
	"",
	"library/",
	"/usr/local/t3x/0/",
	"c:/t3x0/",
	0 ];

 public header() do
	return 256;
 end

 public codefrags() return [
	[ CG_NULL,	""		],
	[ CG_PUSH,	"50"		], ! push ax
	[ CG_CLEAR,	"31c0"		], ! xor ax,ax
	[ CG_DROP,	"5b"		], ! pop bx
	[ CG_LDVAL,	"b8,w"		], ! mov ax,W
	[ CG_LDADDR,	"b8,w"		], ! mov ax,W
	[ CG_LDLREF,	"8d86,w"	], ! lea ax,[bp+W]
	[ CG_LDGLOB,	"a1,w"		], ! mov ax,[W]
	[ CG_LDLOCL,	"8b86,w"	], ! mov ax,[bp+W]
	[ CG_STGLOB,	"a3,w"		], ! mov [W],ax
	[ CG_STLOCL,	"8986,w"	], ! mov [bp+W],ax
	[ CG_STINDR,	"5b8907"	], ! pop bx; mov [bx],ax
	[ CG_STINDB,	"5b8807"	], ! pop bx; mov [bx],al
	[ CG_INCGLOB,	"ff06,w"	], ! inc word [W]
	[ CG_INCLOCL,	"ff86,w"	], ! inc word [bp+W]
	[ CG_INCR,	"05,w"		], ! add ax,W
	[ CG_STACK,	"81c4,w"	], ! add sp,W
	[ CG_UNSTACK,	"81c4,w"	], ! add sp,W
	[ CG_LOCLVEC,	"89e050"	], ! mov ax,sp; push ax
	[ CG_GLOBVEC,	"8926,w"	], ! mov [W],sp
	[ CG_INDEX,	"d1e05b01d8"	], ! shl ax,1;pop bx;add ax,bx
	[ CG_DEREF,	"89c38b07"	], ! mov bx,ax; mov ax,[bx]
	[ CG_INDXB,	"5b01d8"	], ! pop bx; add ax,bx
	[ CG_DREFB,	"89c331c08a07"	], ! mov bx,ax; xor ax,ax
					   ! mov ax,[bx]
	[ CG_CALL,	"e8,R"		], ! call R
	[ CG_CALR,	"ffd0"		], ! call ax
	[ CG_JUMP,	"e9,R"		], ! jmp R
	[ CG_RJUMP,	"eb,r"		], ! jmps R
	[ CG_JMPFALSE,	"09c07503e9,R"	], ! or ax,ax; jne +3; jmp R
	[ CG_JMPTRUE,	"09c07403e9,R"	], ! or ax,ax; je +3; jmp R
	[ CG_FOR,	"5b39c37c03e9,R"], ! pop bx; cmp bx,ax; jl +3
					   ! jmp R
	[ CG_FORDOWN,	"5b39c37f03e9,R"], ! pop bx; cmp bx,ax; jg +3
					   ! jmp R
	[ CG_MKFRAME,	"5589e5"	], ! push bp; mov bp,sp
	[ CG_DELFRAME,	"5d"		], ! pop bp
	[ CG_RET,	"c3"		], ! ret
	[ CG_HALT,	"b8,wb44ccd21"	], ! mov ax,W; mov ah,4ch; int 21H
	[ CG_NEG,	"f7d8"		], ! neg ax
	[ CG_INV,	"f7d0"		], ! not ax
	[ CG_LOGNOT,	"f7d819c0f7d0"	], ! neg ax; sbb ax,ax; not ax
	[ CG_ADD,	"5b01d8"	], ! pop bx; add ax,bx
	[ CG_SUB,	"89c35829d8"	], ! mov bx,ax;pop ax;sub ax,bx
	[ CG_MUL,	"59f7e9"	], ! pop cx; imul cx
	[ CG_DIV,	"89c15899f7f9"	], ! mov cx,ax; pop ax; cwd;
					   ! idiv cx
	[ CG_MOD,	"89c15831d2f7f189d0"], ! mov ax,cx; pop ax
					   ! xor dx,dx; div cx
					   ! mov ax,dx
	[ CG_AND,	"5b21d8"	], ! pop bx; and ax,bx
	[ CG_OR,	"5b09d8"	], ! pop bx; or ax,bx
	[ CG_XOR,	"5b31d8"	], ! pop bx; xor ax,bx
	[ CG_SHL,	"89c158d3e0"	], ! mov cx,ax;pop ax;shl ax,cl
	[ CG_SHR,	"89c158d3e8"	], ! mov cx,ax;pop ax;shr ax,cl
	[ CG_EQ,	"e8,>2f01"	], ! call $12f
	[ CG_NE,	"e8,>3201"	], ! call $132
	[ CG_LT,	"e8,>3501"	], ! call $135
	[ CG_GT,	"e8,>3801"	], ! call $138
	[ CG_LE,	"e8,>3b01"	], ! call $13b
	[ CG_GE,	"e8,>3e01"	], ! call $13e
	[ CG_UMUL,	"59f7e1"	], ! pop cx; mul cx
	[ CG_UDIV,	"89c15831d2f7f1"], ! mov cx,ax; pop ax; xor dx,dx
					   ! div cx
	[ CG_ULT,	"e8,>4401"	], ! call $144
	[ CG_UGT,	"e8,>4701"	], ! call $147
	[ CG_ULE,	"e8,>4a01"	], ! call $14a
	[ CG_UGE,	"e8,>4d01"	], ! call $14d
	[ CG_JMPEQ,	"5b39c37503e9,R"], ! pop bx; cmp bx,ax; jne +3
					   ! jmp R
	[ CG_JMPNE,	"5b39c37403e9,R"], ! ... je +3 ...
	[ CG_JMPLT,	"5b39c37d03e9,R"], ! ... jge +3 ...
	[ CG_JMPGT,	"5b39c37e03e9,R"], ! ... jle +3 ...
	[ CG_JMPLE,	"5b39c37f03e9,R"], ! ... jg +3 ...
	[ CG_JMPGE,	"5b39c37c03e9,R"], ! ... jl +3 ...
	[ CG_JMPULT,	"5b39c37303e9,R"], ! ... jae +3 ...
	[ CG_JMPUGT,	"5b39c37603e9,R"], ! ... jbe +3 ...
	[ CG_JMPULE,	"5b39c37703e9,R"], ! ... ja +3 ...
	[ CG_JMPUGE,	"5b39c37203e9,R"], ! ... jb +3 ...
	[ CG_SKIP,	"e9,R"		], ! jmp R
	[ %1,		""		] ];

 public optimizations() return [
	[ CG_EQ,	0,	CG_JMPFALSE,	CG_JMPNE	],
	[ CG_NE,	0,	CG_JMPFALSE,	CG_JMPEQ	],
	[ CG_LT,	0,	CG_JMPFALSE,	CG_JMPGE	],
	[ CG_GT,	0,	CG_JMPFALSE,	CG_JMPLE	],
	[ CG_LE,	0,	CG_JMPFALSE,	CG_JMPGT	],
	[ CG_GE,	0,	CG_JMPFALSE,	CG_JMPLT	],
	[ CG_EQ,	0,	CG_JMPTRUE,	CG_JMPEQ	],
	[ CG_NE,	0,	CG_JMPTRUE,	CG_JMPNE	],
	[ CG_LT,	0,	CG_JMPTRUE,	CG_JMPLT	],
	[ CG_GT,	0,	CG_JMPTRUE,	CG_JMPGT	],
	[ CG_LE,	0,	CG_JMPTRUE,	CG_JMPLE	],
	[ CG_GE,	0,	CG_JMPTRUE,	CG_JMPGE	],
	[ CG_LOGNOT,	0,	CG_JMPFALSE,	CG_JMPTRUE	],
	[ CG_DROP,	0,	CG_PUSH,	CG_NULL		],
	[ %1,		%1,	%1,		%1		],
	[ CG_LDVAL,	0,	CG_INDEX,	CG_DROP		],
	[ CG_LDVAL,	0,	CG_INDXB,	CG_DROP		],
	[ CG_LDVAL,	0,	CG_ADD,		CG_DROP		],
	%1 ];

 public library() return [
	  0x0080,
	  packed [ 
	    0xe9,0xb3,0x03,0xcc,0x04,0x54,0x33,0x58,0xe9,0x4e,0x00,0xe9,
	    0x4f,0x00,0xe9,0x61,0x00,0xe9,0x88,0x00,0xe9,0xa7,0x00,0xe9,
	    0xb7,0x00,0xe9,0xd8,0x00,0xe9,0x38,0x01,0xe9,0xa4,0x01,0xe9,
	    0xb7,0x01,0xe9,0xcc,0x01,0xe9,0x2c,0x02,0xe9,0x42,0x02,0xe9,
	    0xf8,0x02,0xe9,0x03,0x03,0xe9,0x0e,0x03,0xe9,0x19,0x03,0xe9,
	    0x24,0x03,0xe9,0x2f,0x03,0xe9,0xc9,0x01,0xe9,0x37,0x03,0xe9,
	    0x42,0x03,0xe9,0x4d,0x03,0xe9,0x58,0x03,0xe9,0x34,0x02,0xe9,
	    0x5c,0x02,0xe9,0x97,0x02,0xb8,0x02,0x00,0xc3,0x55,0x89,0xe5,
	    0x8b,0x7e,0x04,0xfc,0xb0,0x0d,0xaa,0xb0,0x0a,0xaa,0x30,0xc0,
	    0xaa,0x8b,0x46,0x04,0x5d,0xc3,0x55,0x89,0xe5,0x8b,0x7e,0x08,
	    0x8b,0x76,0x06,0x8b,0x4e,0x04,0x39,0xfe ],
	  0x0080,
	  packed [ 
	    0x75,0x04,0x31,0xc0,0xeb,0x14,0xff,0xc1,0xfc,0xf3,0xa6,0x09,
	    0xc9,0x75,0x04,0x31,0xc0,0xeb,0x07,0x8a,0x45,0xff,0x2a,0x44,
	    0xff,0x98,0x5d,0xc3,0x55,0x89,0xe5,0x8b,0x7e,0x08,0x8b,0x76,
	    0x06,0x8b,0x4e,0x04,0xfc,0x39,0xf7,0x74,0x0d,0x72,0x09,0xfd,
	    0x01,0xce,0x01,0xcf,0xff,0xce,0xff,0xcf,0xf3,0xa4,0x5d,0x31,
	    0xc0,0xc3,0x55,0x89,0xe5,0x8b,0x7e,0x08,0x8b,0x46,0x06,0x8b,
	    0x4e,0x04,0xfc,0xf3,0xaa,0x5d,0x31,0xc0,0xc3,0x55,0x89,0xe5,
	    0x8b,0x7e,0x08,0x89,0xfa,0x8b,0x46,0x06,0x8b,0x4e,0x04,0xff,
	    0xc1,0xfc,0xf2,0xae,0x09,0xc9,0x74,0x08,0x89,0xf8,0x29,0xd0,
	    0xff,0xc8,0xeb,0x03,0xb8,0xff,0xff,0x5d,0xc3,0x55,0x89,0xe5,
	    0x8b,0x4e,0x08,0xff,0xc9,0xbe,0x82,0x00 ],
	  0x0080,
	  packed [ 
	    0xfc,0xff,0xce,0xac,0x80,0xf8,0x20,0x74,0xfa,0x80,0xf8,0x09,
	    0x74,0xf5,0x80,0xf8,0x0d,0x75,0x05,0xb8,0xff,0xff,0xeb,0x3e,
	    0x09,0xc9,0x74,0x14,0xff,0xc9,0xac,0x80,0xf8,0x20,0x74,0xdd,
	    0x80,0xf8,0x09,0x74,0xd8,0x80,0xf8,0x0d,0x74,0xd3,0xeb,0xee,
	    0x8b,0x7e,0x06,0x8b,0x4e,0x04,0x31,0xdb,0xff,0xc3,0x39,0xcb,
	    0x73,0x13,0xaa,0xac,0x80,0xf8,0x20,0x74,0x0c,0x80,0xf8,0x09,
	    0x74,0x07,0x80,0xf8,0x0d,0x74,0x02,0xeb,0xe7,0x31,0xc0,0xaa,
	    0x89,0xd8,0x5d,0xc3,0x55,0x89,0xe5,0x8b,0x46,0x04,0x81,0xf8,
	    0x01,0x00,0x75,0x11,0xb8,0x00,0x3c,0x8b,0x56,0x06,0x31,0xc9,
	    0xcd,0x21,0x73,0x2f,0xb8,0xff,0xff,0xeb,0x50,0x81,0xf8,0x00,
	    0x00,0x74,0x14,0x81,0xf8,0x02,0x00,0x74 ],
	  0x0080,
	  packed [ 
	    0x0b,0x81,0xf8,0x03,0x00,0x74,0x05,0xb8,0xff,0xff,0xeb,0x39,
	    0xb8,0x02,0x00,0x81,0xc8,0x00,0x3d,0x8b,0x56,0x06,0xcd,0x21,
	    0x73,0x05,0xb8,0xff,0xff,0xeb,0x26,0x81,0xf8,0x00,0x00,0x7d,
	    0x05,0xb8,0xff,0xff,0xeb,0x1b,0x8b,0x5e,0x04,0x81,0xfb,0x03,
	    0x00,0x75,0x12,0x50,0x89,0xc3,0xb8,0x02,0x42,0x31,0xc9,0x31,
	    0xd2,0xcd,0x21,0x58,0x73,0x03,0xb8,0xff,0xff,0x5d,0xc3,0x55,
	    0x89,0xe5,0x8b,0x5e,0x04,0xb8,0x00,0x3e,0xcd,0x21,0x73,0x05,
	    0xb8,0xff,0xff,0xeb,0x02,0x31,0xc0,0x5d,0xc3,0x55,0x89,0xe5,
	    0xb8,0x00,0x3f,0x8b,0x5e,0x08,0x8b,0x56,0x06,0x8b,0x4e,0x04,
	    0xcd,0x21,0x73,0x03,0xb8,0xff,0xff,0x5d,0xc3,0x55,0x89,0xe5,
	    0xb8,0x00,0x40,0x8b,0x5e,0x08,0x8b,0x56 ],
	  0x0080,
	  packed [ 
	    0x06,0x8b,0x4e,0x04,0xcd,0x21,0x73,0x03,0xb8,0xff,0xff,0x5d,
	    0xc3,0x55,0x89,0xe5,0x8b,0x56,0x06,0x31,0xc9,0x8b,0x46,0x04,
	    0x09,0xc0,0x75,0x05,0xb8,0x00,0x42,0xeb,0x27,0x81,0xf8,0x01,
	    0x00,0x75,0x05,0xb8,0x01,0x42,0xeb,0x1c,0x09,0xd2,0x74,0x04,
	    0xf7,0xda,0xff,0xc9,0x81,0xf8,0x02,0x00,0x75,0x05,0xb8,0x02,
	    0x42,0xeb,0x09,0x81,0xf8,0x03,0x00,0x75,0x0e,0xb8,0x01,0x42,
	    0x8b,0x5e,0x08,0xcd,0x21,0x72,0x04,0x31,0xc0,0xeb,0x03,0xb8,
	    0xff,0xff,0x5d,0xc3,0x55,0x89,0xe5,0xb8,0x00,0x56,0x8b,0x56,
	    0x06,0x8b,0x7e,0x04,0xcd,0x21,0x73,0x05,0xb8,0xff,0xff,0xeb,
	    0x02,0x31,0xc0,0x5d,0xc3,0x55,0x89,0xe5,0xb8,0x00,0x41,0x8b,
	    0x56,0x04,0xcd,0x21,0x73,0x05,0xb8,0xff ],
	  0x0080,
	  packed [ 
	    0xff,0xeb,0x02,0x31,0xc0,0x5d,0xc3,0x55,0x89,0xe5,0xb8,0x00,
	    0x40,0x8b,0x5e,0x04,0x31,0xd2,0x31,0xc9,0xcd,0x21,0x73,0x05,
	    0xb8,0xff,0xff,0xeb,0x02,0x31,0xc0,0x5d,0xc3,0x00,0x00,0x00,
	    0x00,0x00,0x00,0x53,0x8b,0x1e,0xa5,0x03,0xc7,0x07,0xff,0xff,
	    0x5b,0xcf,0x55,0x89,0xe5,0x8b,0x5e,0x04,0x09,0xdb,0x74,0x18,
	    0x81,0xfb,0x01,0x00,0x74,0x25,0x89,0x1e,0xa5,0x03,0xc7,0x07,
	    0x00,0x00,0xb8,0x23,0x25,0xba,0xa7,0x03,0xcd,0x21,0xeb,0x18,
	    0x1e,0x8b,0x16,0xa3,0x03,0x8b,0x06,0xa1,0x03,0x8e,0xd8,0xb8,
	    0x23,0x25,0xcd,0x21,0x1f,0xeb,0x05,0xb8,0x00,0x0b,0xcd,0x21,
	    0x31,0xc0,0x5d,0xc3,0x55,0x89,0xe5,0x8b,0x46,0x06,0x88,0x06,
	    0x0f,0x04,0x8b,0x5e,0x04,0x8b,0x07,0x8b ],
	  0x0080,
	  packed [ 
	    0x4f,0x04,0x8b,0x57,0x06,0x8b,0x77,0x08,0x8b,0x7f,0x0a,0x8b,
	    0x5f,0x02,0xcd,0x00,0x9c,0x53,0x8b,0x5e,0x04,0x89,0x07,0x89,
	    0x4f,0x04,0x89,0x57,0x06,0x89,0x77,0x08,0x89,0x7f,0x0a,0x58,
	    0x89,0x47,0x02,0x58,0x5d,0xc3,0x5e,0x5b,0x31,0xd2,0x39,0xc3,
	    0x75,0x02,0xff,0xca,0x89,0xd0,0xff,0xe6,0x5e,0x5b,0x31,0xd2,
	    0x39,0xc3,0x74,0x02,0xff,0xca,0x89,0xd0,0xff,0xe6,0x5e,0x5b,
	    0x31,0xd2,0x39,0xc3,0x7d,0x02,0xff,0xca,0x89,0xd0,0xff,0xe6,
	    0x5e,0x5b,0x31,0xd2,0x39,0xc3,0x7e,0x02,0xff,0xca,0x89,0xd0,
	    0xff,0xe6,0x5e,0x5b,0x31,0xd2,0x39,0xc3,0x7f,0x02,0xff,0xca,
	    0x89,0xd0,0xff,0xe6,0x5e,0x5b,0x31,0xd2,0x39,0xc3,0x7c,0x02,
	    0xff,0xca,0x89,0xd0,0xff,0xe6,0x5e,0x5b ],
	  0x004c,
	  packed [ 
	    0x31,0xd2,0x39,0xc3,0x73,0x02,0xff,0xca,0x89,0xd0,0xff,0xe6,
	    0x5e,0x5b,0x31,0xd2,0x39,0xc3,0x76,0x02,0xff,0xca,0x89,0xd0,
	    0xff,0xe6,0x5e,0x5b,0x31,0xd2,0x39,0xc3,0x77,0x02,0xff,0xca,
	    0x89,0xd0,0xff,0xe6,0x5e,0x5b,0x31,0xd2,0x39,0xc3,0x72,0x02,
	    0xff,0xca,0x89,0xd0,0xff,0xe6,0xb8,0xfe,0xff,0x89,0xc4,0x06,
	    0xb8,0x23,0x35,0xcd,0x21,0x8c,0xc0,0x89,0x06,0xa1,0x03,0x07,
	    0x89,0x1e,0xa3,0x03 ],
	  0 ];

end
